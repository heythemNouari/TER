security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        # un membre avec le ROLE_ADMIN aura également le ROLE_USER
        ROLE_ADMIN: ROLE_USER
        ROLE_COMMERCIAL: ROLE_USER
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:

            switch_user: ~
            # permet de profiter du ROLE_ALLOWED_TO_SWITCH du super admin
            # https://symfony.com/doc/current/security/impersonating_user.html

            # activate different ways to authenticate

            pattern:    ^/
            user_checker: App\Security\UserChecker # activation du UserChecker créé précédemment
            http_basic: ~
            provider: our_db_provider
            anonymous: true

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
            # https://symfony.com/doc/current/security/form_login_setup.html
                login_path: connexion
                check_path: connexion
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: /deconnexion
                target: /
                

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
